{"version":3,"file":"axios.es5.js","sources":["../src/helpers/utils.ts","../src/helpers/url.ts","../src/helpers/header.ts","../src/helpers/error.ts","../src/helpers/cookie.ts","../src/core/xhr.ts","../src/core/transform.ts","../src/core/dispatchRequest.ts","../src/core/InterceptorManager.ts","../src/core/mergeConfig.ts","../src/core/Axios.ts","../src/helpers/data.ts","../src/defaults.ts","../src/cancel/Cancel.ts","../src/cancel/CancelToken.ts","../src/axios.ts"],"sourcesContent":["import { format } from 'path'\n\nconst toString = Object.prototype.toString\n\nexport function isDate(val: any): val is Date {\n  return toString.call(val) === '[object Date]'\n}\n\nexport function isObject(val: any): val is Object {\n  return val !== null && typeof val === 'object'\n}\n\n// 判断是否是普通对象{}\nexport function isPlainObject(val: any): val is Object {\n  return toString.call(val) === '[object Object]'\n}\n\n// as 断言 ？\n// 把 from 里的属性都扩展到 to 中，包括原型上的属性。\nexport function extend<T, U>(to: T, from: U): T & U {\n  for (const key in from) {\n    ; (to as T & U)[key] = from[key] as any\n  }\n  return to as T & U\n}\n\n// 深拷贝\nexport function deepMerge(...objs: any[]): any {\n  const result = Object.create(null)\n  objs.forEach(obj => {\n    if (obj) {\n      Object.keys(obj).forEach(key => {\n        const val = obj[key]\n        if (isPlainObject(val)) {\n          // 当前key是否已经存在\n          if (isPlainObject(result[key])) {\n            // 存在则需要合并\n            result[key] = deepMerge(result[key], val)\n          } else {\n            result[key] = deepMerge(val)\n          }\n        } else {\n          result[key] = val\n        }\n      })\n    }\n  })\n  return result\n}\n\n// 判断 FormData\nexport function isFormData(val: any): boolean {\n  return typeof val !== 'undefined' && val instanceof FormData\n}","import { isDate, isObject, isPlainObject } from './utils'\nfunction encode(val: string): string {\n    return encodeURIComponent(val)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%20/g, '+')\n        .replace(/%5B/gi, '[')\n        .replace(/%5D/gi, ']')\n}\n\n// 对get请求处理 url\nexport function buildURL(url: string, params?: any): string {\n    if (!params) {\n        return url\n    } else {\n        const parts: string[] = []\n        Object.keys(params).forEach((key) => {\n            const val = params[key]\n            if (val === null || typeof val === 'undefined') {\n                // return 继续进行下次循环\n                return\n            }\n            let values = []\n            if (Array.isArray(val)) {\n                values = val\n                key += '[]'\n            } else {\n                values = [val]\n            }\n            values.forEach((val) => {\n                if (isDate(val)) {\n                    val = val.toISOString()\n                } else if (isPlainObject(val)) {\n                    val = JSON.stringify(val)\n                }\n                parts.push(`${encode(key)}=${encode(val)}`)\n            })\n        })\n\n        let serializedParams = parts.join('&')\n        if (serializedParams) {\n            // 忽略哈希\n            const markIndex = url.indexOf('#')\n            if (markIndex !== -1) {\n                url = url.slice(0, markIndex)\n            }\n            // 拼接\n            url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams\n        }\n        return url\n    }\n}\n\ninterface URLOrigin {\n    protocol: string\n    host: string\n}\n\n// 是否是同源的url\nexport function isURLSameOrigin(requestURL: string): boolean {\n    const parsedOrigin = resolveURL(requestURL)\n    return (\n        parsedOrigin.protocol === currentOrigin.protocol && parsedOrigin.host === currentOrigin.host\n    )\n}\n\nconst urlParsingNode = document.createElement('a')\nconst currentOrigin = resolveURL(window.location.href)\n\n// 创建a标签然后赋值 url 然后 获取 protocol 与 host\nfunction resolveURL(url: string): URLOrigin {\n    urlParsingNode.setAttribute('href', url)\n    const { protocol, host } = urlParsingNode\n    return {\n        protocol,\n        host\n    }\n}","import { isPlainObject, deepMerge } from './utils'\nimport { Method } from '../types/index'\nimport { parse } from 'path'\n\n// 替换 header 大小写\nfunction normalizeHeaderName(headers: any, normalizedName: string): void {\n  if (!headers) {\n    return\n  }\n  Object.keys(headers).forEach(name => {\n    if (\n      name !== normalizedName &&\n      name.toLocaleUpperCase() === normalizedName.toLocaleUpperCase()\n    ) {\n      headers[normalizedName] = headers[name]\n      delete headers[name]\n    }\n  })\n}\n\n// 处理header\nexport function processHeaders(headers: any, data: any): any {\n  normalizeHeaderName(headers, 'Content-Type')\n  // 对纯对象{}类型数据 默认加上 header:content-type\n  if (isPlainObject(data)) {\n    if (headers && !headers['Content-Type']) {\n      headers['Content-Type'] = 'application/json;charset=utf-8'\n    }\n  }\n  return headers\n}\n\nexport function parseHeaders(headers: string): any {\n  let parsed = Object.create(null)\n  if (!headers) {\n    return parsed\n  }\n\n  headers.split('\\r\\n').forEach(line => {\n    let [key, val] = line.split(':')\n    key = key.trim().toLowerCase()\n    if (!key) {\n      return\n    }\n    if (val) {\n      val = val.trim()\n    }\n    parsed[key] = val\n  })\n  return parsed\n}\n\n// 处理不同请求情况下header值\nexport function flattenHeaders(headers: any, method: Method): any {\n  if (!headers) {\n    return headers\n  }\n\n  headers = deepMerge(headers.common || {}, headers[method] || {}, headers)\n\n  const methodsToDelete = [\n    'delete',\n    'get',\n    'head',\n    'options',\n    'post',\n    'put',\n    'patch',\n    'common'\n  ]\n\n  methodsToDelete.forEach(method => {\n    delete headers[method]\n  })\n\n  return headers\n}\n","import { AxiosRequestConfig, AxiosResponse } from '../types'\n\nexport class AxiosError extends Error {\n    isAxiosError: boolean\n    config: AxiosRequestConfig\n    code?: string | null\n    request?: any\n    response?: AxiosResponse\n    constructor(\n        message: string,\n        config: AxiosRequestConfig,\n        code?: string | null,\n        request?: any,\n        response?: AxiosResponse\n    ) {\n        super(message)\n        this.config = config\n        this.code = code\n        this.request = request\n        this.response = response\n        this.isAxiosError = true\n        // ts 解决坑\n        Object.setPrototypeOf(this, AxiosError.prototype)\n    }\n}\n\nexport function createError(\n    message: string,\n    config: AxiosRequestConfig,\n    code?: string | null,\n    request?: any,\n    response?: AxiosResponse\n): AxiosError {\n    const error = new AxiosError(message, config, code, request, response)\n    return error\n}","const cookie = {\n    read(name: string): string | null {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'))\n        return match ? decodeURIComponent(match[3]) : null\n    }\n}\n\nexport default cookie","import { AxiosRequestConfig, AxiosPromise, AxiosResponse } from '../types'\nimport { parseHeaders } from '../helpers/header'\nimport { createError } from '../helpers/error'\nimport { isURLSameOrigin } from '../helpers/url'\nimport { isFormData } from '../helpers/utils'\nimport cookie from '../helpers/cookie'\n\nexport default function xhr(config: AxiosRequestConfig): AxiosPromise {\n  return new Promise((resolve, reject) => {\n    const {\n      data = null,\n      url,\n      method = 'get',\n      headers,\n      responseType,\n      timeout,\n      cancelToken,\n      withCredentials,\n      xsrfCookieName,\n      xsrfHeaderName,\n      onDownloadProgress,\n      onUploadProgress,\n      auth\n    } = config\n\n    const request = new XMLHttpRequest()\n\n    request.open(method.toUpperCase(), url!, true)\n\n    configureRequest()\n\n    addEvents()\n\n    processHeaders()\n\n    processCancel()\n\n    request.send(data)\n\n    function configureRequest(): void {\n      if (responseType) {\n        request.responseType = responseType\n      }\n\n      if (timeout) {\n        request.timeout = timeout\n      }\n\n      if (withCredentials) {\n        request.withCredentials = withCredentials\n      }\n    }\n\n    function addEvents(): void {\n      request.onreadystatechange = function handleLoad() {\n        if (request.readyState !== 4) {\n          return\n        }\n\n        if (request.status === 0) {\n          return\n        }\n\n        const responseHeaders = parseHeaders(request.getAllResponseHeaders())\n        const responseData =\n          responseType && responseType !== 'text' ? request.response : request.responseText\n        const response: AxiosResponse = {\n          data: responseData,\n          status: request.status,\n          statusText: request.statusText,\n          headers: responseHeaders,\n          config,\n          request\n        }\n        handleResponse(response)\n      }\n\n      request.onerror = function handleError() {\n        reject(createError('Network Error', config, null, request))\n      }\n\n      request.ontimeout = function handleTimeout() {\n        reject(\n          createError(`Timeout of ${config.timeout} ms exceeded`, config, 'ECONNABORTED', request)\n        )\n      }\n\n      if (onDownloadProgress) {\n        request.onprogress = onDownloadProgress\n      }\n\n      if (onUploadProgress) {\n        request.upload.onprogress = onUploadProgress\n      }\n    }\n\n    function processHeaders(): void {\n      if (isFormData(data)) {\n        delete headers['Content-Type']\n      }\n\n      if ((withCredentials || isURLSameOrigin(url!)) && xsrfCookieName) {\n        const xsrfValue = cookie.read(xsrfCookieName)\n        if (xsrfValue) {\n          headers[xsrfHeaderName!] = xsrfValue\n        }\n      }\n\n      if (auth) {\n        headers['Authorization'] = 'Basic ' + btoa(auth.username + ':' + auth.password)\n      }\n\n      Object.keys(headers).forEach(name => {\n        if (data === null && name.toLowerCase() === 'content-type') {\n          delete headers[name]\n        } else {\n          request.setRequestHeader(name, headers[name])\n        }\n      })\n    }\n\n    function processCancel(): void {\n      if (cancelToken) {\n        cancelToken.promise.then(reason => {\n          request.abort()\n          reject(reason)\n        }).catch()\n      }\n    }\n\n    function handleResponse(response: AxiosResponse): void {\n      if (response.status >= 200 && response.status < 300) {\n        resolve(response)\n      } else {\n        reject(\n          createError(\n            `Request failed with status code ${response.status}`,\n            config,\n            null,\n            request,\n            response\n          )\n        )\n      }\n    }\n  })\n}","import { AxiosTransformer } from '../types'\n\nexport default function transform(\n  data: any,\n  headers: any,\n  fns?: AxiosTransformer | AxiosTransformer[]\n) {\n  if (!fns) {\n    return data\n  }\n\n  if (!Array.isArray(fns)) {\n    fns = [fns]\n  }\n  fns.forEach(fn => {\n    // console.log(fn)\n    // 每一次返回值当做下一次data调用\n    // console.log(fn(data, headers))\n    data = fn(data, headers)\n  })\n  // console.log(data)\n  return data\n}\n","import { AxiosRequestConfig, AxiosPromise, AxiosResponse } from '../types'\nimport { buildURL } from '../helpers/url'\nimport { processHeaders, flattenHeaders } from '../helpers/header'\nimport xhr from './xhr'\nimport transform from './transform'\n\nfunction dispatchRequest(config: AxiosRequestConfig): AxiosPromise {\n  throwIfCancellationRequested(config)\n  processConfig(config)\n  return xhr(config).then(res => {\n    // console.log(res)\n    return transformResponseData(res)\n  })\n}\n\n// 如果调用时候传递了cancelToken则直接抛出异常\nfunction throwIfCancellationRequested(config: AxiosRequestConfig): void {\n  // console.log(config.cancelToken)\n  if (config.cancelToken) {\n    // console.log('config.cancelToken.throwIfRequested()')\n    config.cancelToken.throwIfRequested()\n  }\n}\n\n// 对参数进行处理\nfunction processConfig(config: AxiosRequestConfig): void {\n  config.url = transformURL(config)\n  // 先处理header再处理data\n  config.headers = transformHeaders(config)\n  // 处理data发送数据\n  config.data = transform(config.data, config.headers, config.transformRequest)\n  // 对header进行 flat 处理\n  config.headers = flattenHeaders(config.headers, config.method!)\n}\n\n// 对url进行处理\nfunction transformURL(config: AxiosRequestConfig): string {\n  const { url, params } = config\n  // 加 ！表示类型断言，这个变量不会为空\n  return buildURL(url!, params)\n}\n\n// 处理 header\nfunction transformHeaders(config: AxiosRequestConfig): any {\n  const { headers = {}, data } = config\n  return processHeaders(headers, data)\n}\n\n// 修改返回值，将json改为字符串\nfunction transformResponseData(res: AxiosResponse): AxiosResponse {\n  res.data = transform(res.data, res.headers, res.config.transformResponse)\n  return res\n}\n\nexport default dispatchRequest\n","import { ResolvedFn, RejectedFn } from '../types/index'\ninterface Interceptor<T> {\n  resolved: ResolvedFn<T>\n  rejected?: RejectedFn\n}\n\nexport default class InterceptorManager<T> {\n  private interceptors: Array<Interceptor<T> | null>\n  constructor() {\n    this.interceptors = []\n  }\n  // 添加拦截器\n  use(resolved: ResolvedFn<T>, rejected?: RejectedFn): number {\n    this.interceptors.push({\n      resolved,\n      rejected\n    })\n    return this.interceptors.length - 1\n  }\n  // 遍历拦截器\n  forEach(fn: (Interceptor: Interceptor<T>) => void): void {\n    this.interceptors.forEach(interceptor => {\n      if (interceptor !== null) {\n        fn(interceptor)\n      }\n    })\n  }\n  // 根据id删除拦截器\n  eject(id: number): void {\n    if (this.interceptors[id]) {\n      // 不能直接删除数组，而是把值置为null\n      this.interceptors[id] = null\n    }\n  }\n}\n","import { AxiosRequestConfig, Axios } from '../types'\nimport { isPlainObject, deepMerge } from '../helpers/utils'\n\n// strats 合并策略函数\nconst strats = Object.create(null)\n// 默认合并策略\nfunction defaultStrat(val1: any, val2: any): any {\n  return typeof val2 !== 'undefined' ? val2 : val1\n}\n\n// 只接受自定义配置合并策略\nfunction fromVal2Strat(val1: any, val2: any): any {\n  if (typeof val2 !== 'undefined') {\n    return val2\n  }\n}\n\n// 对 url params data 实现简单策略\nconst stratKeysFromVal2 = ['url', 'params', 'data']\n\nstratKeysFromVal2.forEach(key => {\n  strats[key] = fromVal2Strat\n})\n\n// 复杂对象合并策略\nfunction deepMergeStrat(val1: any, val2: any) {\n  if (isPlainObject(val2)) {\n    return deepMerge(val1, val2)\n  } else if (typeof val2 !== 'undefined') {\n    return val2\n  } else if (isPlainObject(val1)) {\n    // val2 为空会走到这个分支\n    return deepMerge(val1)\n  } else if (typeof val1 !== 'undefined') {\n    return val1\n  }\n}\n\n// 对header实现复杂策略\nconst stratKeysDeepMerge = ['headers', 'auth']\n\nstratKeysDeepMerge.forEach(key => {\n  strats[key] = deepMergeStrat\n})\n\n// config1 默认配置\n// config2 用户传入配置\nexport default function mergeConfig(\n  config1: AxiosRequestConfig,\n  config2?: AxiosRequestConfig\n): AxiosRequestConfig {\n  if (!config2) {\n    config2 = {}\n  }\n  const config = Object.create(null)\n\n  for (let key in config2) {\n    mergeField(key)\n  }\n\n  for (let key in config1) {\n    if (!config2[key]) {\n      mergeField(key)\n    }\n  }\n\n  function mergeField(key: string): void {\n    const strat = strats[key] || defaultStrat\n    config[key] = strat(config1[key], config2![key])\n  }\n\n  return config\n}\n","import {\n  AxiosRequestConfig,\n  AxiosPromise,\n  Method,\n  AxiosResponse,\n  ResolvedFn,\n  RejectedFn\n} from '../types'\nimport dispatchRequest from './dispatchRequest'\nimport InterceptorManager from './InterceptorManager'\nimport mergeConfig from './mergeConfig'\n\n\ninterface Interceptors {\n  request: InterceptorManager<AxiosRequestConfig>\n  response: InterceptorManager<AxiosResponse>\n}\n\ninterface PromiseChain<T> {\n  resolved: ResolvedFn<T> | ((config: AxiosRequestConfig) => AxiosPromise)\n  rejected?: RejectedFn\n}\n\nexport default class Axios {\n  defaults: AxiosRequestConfig\n  interceptors: Interceptors\n  \n\n  constructor(initConfig: AxiosRequestConfig) {\n    // 初始化拦截器\n    this.interceptors = {\n      request: new InterceptorManager<AxiosRequestConfig>(),\n      response: new InterceptorManager<AxiosResponse>()\n    }\n    // 初始化配置\n    this.defaults = initConfig\n    // console.log(this.defaults)\n  }\n\n  request(url: any, config?: any): AxiosPromise {\n    // 实现函数重载\n    if (typeof url === 'string') {\n      if (!config) {\n        config = {}\n      }\n      config.url = url\n    } else {\n      config = url\n    }\n\n    // 合并参数\n    config = mergeConfig(this.defaults, config)\n\n    const chain: PromiseChain<any>[] = [\n      {\n        resolved: dispatchRequest,\n        rejected: undefined\n      }\n    ]\n    // 请求拦截器\n    // 后添加的先执行\n    this.interceptors.request.forEach(interceptor => {\n      chain.unshift(interceptor)\n    })\n\n    // 响应拦截器\n    // 先添加的先执行\n    this.interceptors.response.forEach(interceptor => {\n      chain.push(interceptor)\n    })\n\n    // chain 顺序是 请求拦截器 + xhr请求 + 响应拦截器\n    // 依次链式调用promise\n\n    // 使用promise链式调用\n    let promise = Promise.resolve(config)\n\n    while (chain.length) {\n      // 类型断言chain.shift()不为空\n      const { resolved, rejected } = chain.shift()!\n      // console.log(resolved)\n      promise = promise.then(resolved, rejected)\n    }\n\n    return promise\n  }\n\n  get(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('get', url, config)\n  }\n\n  delete(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('delete', url, config)\n  }\n  options(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('options', url, config)\n  }\n\n  post(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithData('post', url, data, config)\n  }\n\n  put(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithData('put', url, data, config)\n  }\n\n  patch(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithData('patch', url, data, config)\n  }\n\n  _requestMethodWithoutData(\n    method: Method,\n    url: string,\n    config?: AxiosRequestConfig\n  ) {\n    return this.request(\n      Object.assign(config || {}, {\n        method,\n        url\n      })\n    )\n  }\n\n  _requestMethodWithData(\n    method: Method,\n    url: string,\n    data?: any,\n    config?: AxiosRequestConfig\n  ) {\n    return this.request(\n      Object.assign(config || {}, {\n        method,\n        url,\n        data\n      })\n    )\n  }\n}\n\n","import { isPlainObject } from './utils'\n\n// 对请求数据做处理\nexport function transformRequest(data: any): any {\n  // console.log(data)\n  // console.log(isPlainObject(data))\n  if (isPlainObject(data)) {\n    return JSON.stringify(data)\n  }\n  return data\n}\n\nexport function transformResponse(data: any): any {\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data)\n    } catch (e) {\n      // do nothing\n    }\n  }\n  return data\n}\n","import { AxiosRequestConfig } from './types'\nimport { processHeaders } from './helpers/header'\nimport { transformRequest, transformResponse } from './helpers/data'\nconst defaults: AxiosRequestConfig = {\n  method: 'get',\n  timeout: 0,\n  headers: {\n    common: {\n      Accept: 'application/json,text/plain,*/*'\n    }\n  },\n  transformRequest: [\n    function(data: any, headers: any): any {\n      processHeaders(headers, data)\n      return transformRequest(data)\n    }\n  ],\n  transformResponse: [\n    function(data: any): any {\n      return transformResponse(data)\n    }\n  ],\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n}\n\nconst methodsNoData = ['delete', 'get', 'head', 'options']\n\nmethodsNoData.forEach(method => {\n  defaults.headers[method] = {}\n})\n\nconst methodsWithData = ['post', 'put', 'patch']\n\nmethodsWithData.forEach(method => {\n  defaults.headers[method] = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n})\n\n// console.log(defaults)\n\nexport default defaults\n","export default class Cancel {\n    message?: string\n\n    constructor(message?: string) {\n        this.message = message\n    }\n}\n\nexport function isCancel(value: any): boolean {\n    // console.log(value)\n    return value instanceof Cancel\n}","import { CancelExecutor, CancelTokenSource, Canceler } from '../types'\nimport Cancel from './Cancel'\n\ninterface ResolvePromise {\n    (reason?: Cancel): void\n}\n\nexport default class CancelToken {\n    promise: Promise<Cancel>\n    reason?: Cancel\n\n    constructor(executor: CancelExecutor) {\n        let resolvePromise: ResolvePromise\n        // 在pengding状态的promise\n        this.promise = new Promise<Cancel>(resolve => {\n            resolvePromise = resolve\n        })\n        // \n        // console.log(this.promise)\n\n        executor(message => {\n            // 防止多次调用\n            if (this.reason) {\n                return\n            }\n            // 通过 new Cancel 判断是否是 cancel 类型错误\n            this.reason = new Cancel(message)\n            // console.log(this.reason)\n            resolvePromise(this.reason)\n        })\n    }\n\n    throwIfRequested(): void {\n        // console.log(this.reason)\n        if (this.reason) {\n            throw this.reason\n        }\n    }\n\n    static source(): CancelTokenSource {\n        let cancel!: Canceler\n        const token = new CancelToken(c => {\n            // c 是 executor 中执行函数\n            cancel = c\n        })\n        console.log(token)\n        return {\n            cancel,\n            token\n        }\n    }\n}","import { AxiosRequestConfig, AxiosStatic } from './types'\nimport Axios from './core/Axios'\nimport { extend } from './helpers/utils'\nimport defaults from './defaults'\nimport mergeConfig from './core/mergeConfig'\nimport CancelToken from './cancel/CancelToken'\nimport Cancel, { isCancel } from './cancel/Cancel'\n\nfunction createInstance(config: AxiosRequestConfig): AxiosStatic {\n  const context = new Axios(config)\n  // 用 Axios.request 可行吗\n  const instance = Axios.prototype.request.bind(context)\n  // 拷贝属性，将 context 属性 拷贝到 instance 上\n  extend(instance, context)\n  return instance as AxiosStatic\n}\n\nconst axios = createInstance(defaults)\n\n// 创建新的 axios 实例\naxios.create = function create(config: any) {\n  // 合并配置\n  return createInstance(mergeConfig(defaults,config))\n}\n\n// 取消\naxios.CancelToken = CancelToken\naxios.Cancel = Cancel\naxios.isCancel = isCancel\n\nexport default axios\n"],"names":["processHeaders"],"mappings":"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"}