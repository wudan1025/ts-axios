{"map":"{\"version\":3,\"file\":\"url.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/helpers/url.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { isDate, isPlainObject } from './utils';\r\nfunction encode(val) {\r\n    return encodeURIComponent(val)\r\n        .replace(/%40/g, '@')\r\n        .replace(/%3A/gi, ':')\r\n        .replace(/%24/g, '$')\r\n        .replace(/%2C/gi, ',')\r\n        .replace(/%20/g, '+')\r\n        .replace(/%5B/gi, '[')\r\n        .replace(/%5D/gi, ']');\r\n}\r\n// 对get请求处理 url\r\nexport function buildURL(url, params) {\r\n    if (!params) {\r\n        return url;\r\n    }\r\n    else {\r\n        var parts_1 = [];\r\n        Object.keys(params).forEach(function (key) {\r\n            var val = params[key];\r\n            if (val === null || typeof val === 'undefined') {\r\n                // return 继续进行下次循环\r\n                return;\r\n            }\r\n            var values = [];\r\n            if (Array.isArray(val)) {\r\n                values = val;\r\n                key += '[]';\r\n            }\r\n            else {\r\n                values = [val];\r\n            }\r\n            values.forEach(function (val) {\r\n                if (isDate(val)) {\r\n                    val = val.toISOString();\r\n                }\r\n                else if (isPlainObject(val)) {\r\n                    val = JSON.stringify(val);\r\n                }\r\n                parts_1.push(encode(key) + \"=\" + encode(val));\r\n            });\r\n        });\r\n        var serializedParams = parts_1.join('&');\r\n        if (serializedParams) {\r\n            // 忽略哈希\r\n            var markIndex = url.indexOf('#');\r\n            if (markIndex !== -1) {\r\n                url = url.slice(0, markIndex);\r\n            }\r\n            // 拼接\r\n            url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n        }\r\n        return url;\r\n    }\r\n}\r\n// 是否是同源的url\r\nexport function isURLSameOrigin(requestURL) {\r\n    var parsedOrigin = resolveURL(requestURL);\r\n    return (parsedOrigin.protocol === currentOrigin.protocol && parsedOrigin.host === currentOrigin.host);\r\n}\r\nvar urlParsingNode = document.createElement('a');\r\nvar currentOrigin = resolveURL(window.location.href);\r\n// 创建a标签然后赋值 url 然后 获取 protocol 与 host\r\nfunction resolveURL(url) {\r\n    urlParsingNode.setAttribute('href', url);\r\n    var protocol = urlParsingNode.protocol, host = urlParsingNode.host;\r\n    return {\r\n        protocol: protocol,\r\n        host: host\r\n    };\r\n}\r\n//# sourceMappingURL=url.js.map","dts":{"name":"/Users/wudan/Desktop/学习/慕课网/TS  从入门到重构axios /我的文件/ts-axios/dist/types/helpers/url.d.ts","writeByteOrderMark":false,"text":"export declare function buildURL(url: string, params?: any): string;\r\nexport declare function isURLSameOrigin(requestURL: string): boolean;\r\n"}}
